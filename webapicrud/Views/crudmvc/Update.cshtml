@model IEnumerable<webapicrud.Models.EmpClass>

@{
    ViewBag.Title = "Update";
}

<h2>Update</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>tbl_emp</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @foreach (var item in Model)
    {
        <div class="form-group">
            @Html.LabelFor(i => item.no, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(i => item.no, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(i => item.no, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(i => item.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(i => item.firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(i => item.firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(i => item.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(i => item.lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(i => item.lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(i => item.address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(i => item.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(i => item.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(i => item.contactno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(i => item.contactno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(i => item.contactno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(i => item.state, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(i => item.state, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(i => item.state, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    }

</div>
}

<div>
    @Html.ActionLink("Back to List", "Getdata")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
